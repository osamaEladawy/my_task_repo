// Mocks generated by Mockito 5.4.5 from annotations
// in my_task_products/test/product_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_task_products/core/apis/error/error_model.dart' as _i6;
import 'package:my_task_products/features/products/data/models/product_model.dart'
    as _i7;
import 'package:my_task_products/features/products/domain/entities/product_entity.dart'
    as _i5;
import 'package:my_task_products/features/products/domain/repositories/products_repo.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsRepo extends _i1.Mock implements _i3.ProductsRepo {
  MockProductsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.ProductEntity>> getProducts({
    required dynamic limit,
    required dynamic skip,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
          {
            #limit: limit,
            #skip: skip,
          },
        ),
        returnValue:
            _i4.Future<List<_i5.ProductEntity>>.value(<_i5.ProductEntity>[]),
      ) as _i4.Future<List<_i5.ProductEntity>>);

  @override
  _i4.Future<List<_i5.ProductEntity>> filterProducts({
    required String? sortBy,
    required String? order,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterProducts,
          [],
          {
            #sortBy: sortBy,
            #order: order,
          },
        ),
        returnValue:
            _i4.Future<List<_i5.ProductEntity>>.value(<_i5.ProductEntity>[]),
      ) as _i4.Future<List<_i5.ProductEntity>>);

  @override
  _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>> addProduct({
    required String? title,
    required String? description,
    required num? discountPercentage,
    required String? shippingInformation,
    required num? price,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addProduct,
          [],
          {
            #title: title,
            #description: description,
            #discountPercentage: discountPercentage,
            #shippingInformation: shippingInformation,
            #price: price,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>>.value(
                _FakeEither_0<_i6.ErrorModel, _i7.ProductModel>(
          this,
          Invocation.method(
            #addProduct,
            [],
            {
              #title: title,
              #description: description,
              #discountPercentage: discountPercentage,
              #shippingInformation: shippingInformation,
              #price: price,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>>);

  @override
  _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>> updateProduct({
    required String? title,
    required String? description,
    required double? price,
    required int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [],
          {
            #title: title,
            #description: description,
            #price: price,
            #id: id,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>>.value(
                _FakeEither_0<_i6.ErrorModel, _i7.ProductModel>(
          this,
          Invocation.method(
            #updateProduct,
            [],
            {
              #title: title,
              #description: description,
              #price: price,
              #id: id,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>>);

  @override
  _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>> deleteProduct(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [],
          {#id: id},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>>.value(
                _FakeEither_0<_i6.ErrorModel, _i7.ProductModel>(
          this,
          Invocation.method(
            #deleteProduct,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i6.ErrorModel, _i7.ProductModel>>);
}
